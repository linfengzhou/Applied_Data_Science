value=as.vector(my.mat))
scatterplot3d(s3d.dat, type="h", lwd=5, pch=" ",
x.ticklabs=colnames(my.mat), y.ticklabs=rownames(my.mat),
color=grey(25:1/40), main="scatterplot3d - 4")
library("scatterplot3d", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
my.mat <- matrix(runif(25), nrow=5)
dimnames(my.mat) <- list(LETTERS[1:5], letters[11:15])
my.mat # the matrix we want to plot ...
s3d.dat <- data.frame(cols=as.vector(col(my.mat)),
rows=as.vector(row(my.mat)),
value=as.vector(my.mat))
scatterplot3d(s3d.dat, type="h", lwd=5, pch=" ",
x.ticklabs=colnames(my.mat), y.ticklabs=rownames(my.mat),
color=grey(25:1/40), main="scatterplot3d - 4")
cc <- colors()
crgb <- t(col2rgb(cc))
par(xpd = TRUE)
rr <- scatterplot3d(crgb, color = cc, box = FALSE, angle = 24,
xlim = c(-50, 300), ylim = c(-50, 300), zlim = c(-50, 300))
cubedraw(rr)
## 6 b) The rainbow colors from rainbow(201)
rbc <- rainbow(201)
Rrb <- t(col2rgb(rbc))
rR <- scatterplot3d(Rrb, color = rbc, box = FALSE, angle = 24,
xlim = c(-50, 300), ylim = c(-50, 300), zlim = c(-50, 300))
cubedraw(rR)
rR$points3d(Rrb, col = rbc, pch = 16)
require('devtool')
install.packages("devtools")
library(quantmod)
DJIA_INDEX<-getSymbols("^DJI",from="2010-01-05", to='2015-03-01',src="yahoo") #US
View(DJI)
getSymbols("AAPL")
chartSeries(AAPL)
library(foreign)
library(quantmod)
library(ggplot2)
library(plyr)
setwd("~luke/Dropbox/Applied_Data_Science/Assignment 2")
set.seed(1335)
## generate samples
x <- sample(c(0:9), 1000,replace = TRUE)
y <- sample(c(0:9), 1000,replace = TRUE)
## formula a linear model
fit1 <- lm(y ~ x)
summary(fit1)
## import data
data <- read.dta("train.dta")
### summary data
summary(data)
### fit model
fit2 <- lm(d ~ x1,data)
summary(fit2)
### predict
data[1001:1002,2] <- c(0.61,1.01)
pred1 <- predict(fit2,data)
pred1[1001:1002] > 1
## CAPM
GOOG_INDEX<-getSymbols("GOOG",from="2014-03-27", to='2015-09-20',src="yahoo")
NASQ_INDEX<-getSymbols("^IXIC",from="2014-03-27", to='2015-09-20',src="yahoo")
GOOG_return=log(GOOG$GOOG.Adjusted/lag(GOOG$GOOG.Adjusted))
NASQ_return=log(IXIC$IXIC.Adjusted/lag(IXIC$IXIC.Adjusted))
alldata <- cbind(GOOG_return[,1], NASQ_return[,1])
### eliminate format
write.csv(alldata,"allclean.csv",row.names=FALSE)
d<-read.csv("allclean.csv",header=TRUE)
### plot histogram
GOOG_f = cbind(d$GOOG.Adjusted[-1],0)
NASQ_f = cbind(d$IXIC.Adjusted[-1],1)
alldata <- rbind(GOOG_f,NASQ_f)
alldata <- data.frame(alldata)
colnames(alldata) <- c("return","stock")
alldata$stock<-as.factor(alldata$stock)
levels(alldata$stock)
alldata$stock<-revalue(alldata$stock,c("0"="GOOGLE","1"="NASDAQ"))
ggplot(alldata,aes(x=return)) +
geom_histogram(binwidth=0.003,fill="white",colour="black")+
facet_grid(stock~., scales="free")+
ggtitle("Histogram of Stock Return")+
theme_bw()
ggplot(alldata,aes(x=return,fill=stock)) +
geom_histogram(binwidth=0.003,position='identity', alpha=0.4)+
ggtitle("Histogram of Stock Return")+
theme_bw()
### plot scatter plot
alldata1<-cbind(NASQ_f[,1],GOOG_f[,1])
alldata1<-data.frame(alldata1)
colnames(alldata1)<-c("GOOGLE","NASDAQ")
ggplot(alldata1,aes(x=NASDAQ,y=GOOGLE)) + geom_point()+
theme_bw()+ggtitle("CAPM Data")
### fit linear model
fit3 <- lm(GOOGLE~NASDAQ,alldata1)
summary(fit3)
### alpha beta f test
##
? ftest
?? ftest
? var.test
summary(fit3)
fi3$risuduals
fit3$risuduals
str(fit2)
str(fit3)
fit3@risuduals
fit3$risuduals
fit3[2]
fit3[1]
fit3[2]
risuduals <- fit3[2]
str(risuduals)
resiuduals <- fit3$residuals
resiuduals <- fit3$residuals
mean(residuals)
as.numeric(residuals)
as.character(residuals)
names(residuals)
type(residuals)
attr(residuals)
mode(residuals)
as.matirx(residuals)
as.matrix(residuals)
residuals[1]
residuals[2]
residuals$residuals[2]
residuals
residuals()
resiuduals1 <- fit3$residuals
resiuduals1()
resiuduals1
a <- resiuduals1
resiuduals1 <- fit3$residuals
residuals1 <- fit3$residuals
residuals1 <- fit3$residuals
str(residuals1)
mean(residuals1)
residuals2 <- NASQ_f[,1] - GOOG_f[,1]
var.test(residuals1,residuals2)
ggplot(alldata1,aes(x=NASDAQ,y=GOOGLE)) + geom_point()+
theme_bw()+ggtitle("CAPM Data")
ggplot(alldata,aes(x=return,fill=stock)) +
geom_histogram(binwidth=0.003,position='identity', alpha=0.4)+
ggtitle("Histogram of Stock Return")+
theme_bw()
ggplot(alldata,aes(x=return)) +
geom_histogram(binwidth=0.003,fill="white",colour="black")+
facet_grid(stock~., scales="free")+
ggtitle("Histogram of Stock Return")+
theme_bw()
stargazer(fit3 ci.level=.95, ci=TRUE, type="text")
stargazer(fit3,ci.level=.95, ci=TRUE, type="text")
library(stargazer)
install.packages("stargazer")
library(stargazer)
stargazer(fit3,ci.level=.95, ci=TRUE, type="text")
NASQ_INDEX<-getSymbols("^IXIC",from="2010-09-20", to='2015-09-20',src="yahoo")
GOOG_INDEX<-getSymbols("NKE",from="2010-09-20", to='2015-09-20',src="yahoo")
NIKE_INDEX<-getSymbols("NKE",from="2010-09-20", to='2015-09-20',src="yahoo")
library(foreign)
library(quantmod)
library(ggplot2)
library(plyr)
library(stargazer)
setwd("~luke/Dropbox/Applied_Data_Science/Assignment 2")
set.seed(1335)
## generate samples
x <- sample(c(0:9), 1000,replace = TRUE)
y <- sample(c(0:9), 1000,replace = TRUE)
## formula a linear model
fit1 <- lm(y ~ x)
summary(fit1)
## import data
data <- read.dta("train.dta")
### summary data
summary(data)
### fit model
fit2 <- lm(d ~ x1,data)
summary(fit2)
### predict
data[1001:1002,2] <- c(0.61,1.01)
pred1 <- predict(fit2,data)
pred1[1001:1002] > 1
## CAPM
NIKE_INDEX<-getSymbols("NKE",from="2010-09-20", to='2015-09-20',src="yahoo")
NASQ_INDEX<-getSymbols("^IXIC",from="2010-09-20", to='2015-09-20',src="yahoo")
NIKE_return=log(NIKE$NIKE.Adjusted/lag(NIKE$NIKE.Adjusted))
NASQ_return=log(IXIC$IXIC.Adjusted/lag(IXIC$IXIC.Adjusted))
alldata <- cbind(NIKE_return[,1], NASQ_return[,1])
### eliminate format
write.csv(alldata,"allclean.csv",row.names=FALSE)
d<-read.csv("allclean.csv",header=TRUE)
### plot histogram
NIKE_f = cbind(d$NIKE.Adjusted[-1],0)
NASQ_f = cbind(d$IXIC.Adjusted[-1],1)
alldata <- rbind(NIKE_f,NASQ_f)
alldata <- data.frame(alldata)
colnames(alldata) <- c("return","stock")
alldata$stock<-as.factor(alldata$stock)
levels(alldata$stock)
alldata$stock<-revalue(alldata$stock,c("0"="NIKE","1"="NASDAQ"))
ggplot(alldata,aes(x=return)) +
geom_histogram(binwidth=0.003,fill="white",colour="black")+
facet_grid(stock~., scales="free")+
ggtitle("Histogram of Stock Return")+
theme_bw()
ggplot(alldata,aes(x=return,fill=stock)) +
geom_histogram(binwidth=0.003,position='identity', alpha=0.4)+
ggtitle("Histogram of Stock Return")+
theme_bw()
### plot scatter plot
alldata1<-cbind(NASQ_f[,1],NIKE_f[,1])
alldata1<-data.frame(alldata1)
colnames(alldata1)<-c("NIKE","NASDAQ")
ggplot(alldata1,aes(x=NASDAQ,y=NIKE)) + geom_point()+
theme_bw()+ggtitle("CAPM Data")
### fit linear model
fit3 <- lm(NIKE~NASDAQ,alldata1)
summary(fit3)
### alpha beta f test
residuals1 <- fit3$residuals
residuals2 <- NASQ_f[,1] - NIKE_f[,1]
var.test(residuals1,residuals2)
##
alldata <- cbind(NIKE_return[,1], NASQ_return[,1])
NIKE_return=log(NIKE$NIKE.Adjusted/lag(NIKE$NIKE.Adjusted))
NIKE_return=log(NKE$NKE.Adjusted/lag(NKE$NKE.Adjusted))
NASQ_return=log(IXIC$IXIC.Adjusted/lag(IXIC$IXIC.Adjusted))
alldata <- cbind(NIKE_return[,1], NASQ_return[,1])
write.csv(alldata,"allclean.csv",row.names=FALSE)
d<-read.csv("allclean.csv",header=TRUE)
NIKE_f = cbind(d$NKE.Adjusted[-1],0)
NASQ_f = cbind(d$IXIC.Adjusted[-1],1)
alldata <- rbind(NIKE_f,NASQ_f)
alldata <- data.frame(alldata)
colnames(alldata) <- c("return","stock")
alldata$stock<-as.factor(alldata$stock)
levels(alldata$stock)
ggplot(alldata,aes(x=return)) +
geom_histogram(binwidth=0.003,fill="white",colour="black")+
facet_grid(stock~., scales="free")+
ggtitle("Histogram of Stock Return")+
theme_bw()
ggplot(alldata,aes(x=return,fill=stock)) +
geom_histogram(binwidth=0.003,position='identity', alpha=0.4)+
ggtitle("Histogram of Stock Return")+
theme_bw()
### plot scatter plot
alldata1<-cbind(NASQ_f[,1],NIKE_f[,1])
alldata1<-data.frame(alldata1)
colnames(alldata1)<-c("NIKE","NASDAQ")
ggplot(alldata1,aes(x=NASDAQ,y=NIKE)) + geom_point()+
theme_bw()+ggtitle("CAPM Data")
### fit linear model
fit3 <- lm(NIKE~NASDAQ,alldata1)
summary(fit3)
### alpha beta f test
residuals1 <- fit3$residuals
residuals2 <- NASQ_f[,1] - NIKE_f[,1]
var.test(residuals1,residuals2)
e1 <- rnorm(1000, mean=0, sd=1)
e2 <- rnorm(1000, mean=0, sd=1)
set.seed(1335)
e1 <- rnorm(1000, mean=0, sd=1)
e2 <- rnorm(1000, mean=0, sd=1)
e2 <- rnorm(1000, mean=0, sd=1)
e1 <- rnorm(1000, mean=0, sd=1)
e2 <- rnorm(1000, mean=0, sd=1)
set.seed(1335)
e1 <- rnorm(1000, mean=0, sd=1)
e2 <- rnorm(1000, mean=0, sd=1)
set.seed(1335)
e1 <- rnorm(1000, mean=0, sd=1)
e2 <- rnorm(1000, mean=0, sd=1)
set.seed(1335)
e1 <- rnorm(1000, mean=0, sd=1)
e2 <- rnorm(1000, mean=0, sd=1)
set.seed(1335)
e1 <- rnorm(1000, mean=0, sd=1)
e2 <- rnorm(1000, mean=0, sd=1)
set.seed(1335)
e1 <- rnorm(1000, mean=0, sd=1)
e2 <- rnorm(1000, mean=0, sd=1)
set.seed(1335)
e1 <- rnorm(1000, mean=0, sd=1)
e2 <- rnorm(1000, mean=0, sd=1)
set.seed(1335)
e1 <- rnorm(1000, mean=0, sd=1)
e2 <- rnorm(1000, mean=0, sd=1)
set.seed(1335)
e1 <- rnorm(1000, mean=0, sd=1)
e2 <- rnorm(1000, mean=0, sd=1)
set.seed(1335)
e1 <- rnorm(1000, mean=0, sd=1)
e2 <- rnorm(1000, mean=0, sd=1)
set.seed(1335)
e1 <- rnorm(1000, mean=0, sd=1)
e2 <- rnorm(1000, mean=0, sd=1)
set.seed(1335)
e1 <- rnorm(1000, mean=0, sd=1)
e2 <- rnorm(1000, mean=0, sd=1)
x4 <- rnorm(1000, mean=0, sd=1)
e4 <- rnorm(1000, mean=0, sd=1)
y4 <- 1 + 2 * x4 + e4
y4
fit4 <- lm(y4~x4)
summary(fit4)
? function
{}
q5 <- function(reptime){
d5 <- data.frame()
for i in 1:reptime
print i
}
q5 <- function(reptime){
d5 <- data.frame()
for i in 1:reptime{
i}
}
q5 <- function(reptime){
d5 <- data.frame()
for (i in 1:reptime){
i}
}
q5(1000)
qq <- q5(1000)
q5 <- function(reptime){
d5 <- data.frame()
for (i in 1:reptime){
i
return i}
}
q5 <- function(reptime){
d5 <- data.frame()
for (i in 1:reptime){
i
}
return i
}
q5 <- function(reptime){
d5 <- data.frame()
for (i in 1:reptime){
d5[,1] <-rbind(d5[,1],i)
}
return d5
}
reptime =5
d5 <- data.frame()
for (i in 1:reptime){
d5[,1] <-rbind(d5[,1],i)
}
d
d5
d5<-rbind(d5[,1],1)
d5<-rbind(d5[1,1],1)
d5<-rbind(d5[1,2],1)
d5<-rbind(d5[2,1],1)
d5<-rbind(d5[1,1],1)
d5<-rbind(d5[1,1],1)
d5<-rbind(d5[1,1],1)
d5<-rbind(d5[2,1],1)
d5<-rbind(d5[3,1],1)
c5 <- c()
for (j in 1:5){
c5 <- c(c5,j)
}
c5
d5 = data.frame()
d5 <- c5
d5 <- cbind(d5,c5)
d5 <- cbind(d5,c5)
d5 <- cbind(d5,c5)
d5 <- cbind(d5,c5)
q5 <- function(reptime){
d5 <- as.dataframe()
c5 <- c()
for (i in 1:reptime){
for (j in 1:5){
c5 <- c(c5,j)
}
d5 <- cbind(d5,c5)
}
}
q5 <- function(reptime){
d5 <- as.dataframe()
c5 <- c()
for (i in 1:reptime){
for (j in 1:5){
c5 <- c(c5,j)
}
d5 <- cbind(d5,c5)
}
return(d5)
}
d555<-q5(199)
q5 <- function(reptime){
d5 <- data.frame()
c5 <- c()
for (i in 1:reptime){
for (j in 1:5){
c5 <- c(c5,j)
}
d5 <- cbind(d5,c5)
}
return(d5)
}
d555<-q5(199)
d5 <- data.frame()
c5 <- c()
for (i in 1:reptime){
for (j in 1:5){
c5 <- c(c5,j)
}
d5 <- cbind(d5,c5)
}
d5
d5 <- cbind(d5,c5)
d5 <- c()
d5 <- cbind(d5,c5)
d5 <- cbind(d5,c5)
q5 <- function(reptime){
d5 <- c()
c5 <- c()
for (i in 1:reptime){
for (j in 1:5){
c5 <- c(c5,j)
}
d5 <- cbind(d5,c5)
}
return(d5)
}
d555 <- q5(100)
View(`d555`)
q5 <- function(reptime){
d5 <- c()
c5 <- c()
for (i in 1:reptime){
c5 <- rnorm(1000, mean=0, sd=1)
d5 <- cbind(d5,c5)
}
return(d5)
}
d55<-q5(5)
View(`d55`)
fit4
fit4$Coefficients
str(fit4)
fit4[1]
fit4[1]$coefficients
fit4[1]$coefficients(1)
fit4[1]$coefficients[1]
fit4[1]$coefficients[2]
iii<- fit4[1]$coefficients[2]
iii
iii+iii
mean(iii)
iii <- rbind(iii,fit4[1]$coefficients[2])
iii
iii <- rbind(iii,fit4[1]$coefficients[2])
iii
iii<-fit4[1]$coefficients
iii
iii <- rbind(iii,fit4[1]$coefficients)
iii
q5 <- function(reptime){
d5 <- c()
f5 <- c()
for (i in 1:reptime){
e5 <- rnorm(1000, mean=0, sd=1)
x5 <- rnrom(1000, mean=0, sd=1)
y5 <- 1 + 2 * x5 + e5
fit5 <- lm(y5~x5)
f5 <- rbind(f5,fit5[1]$coefficients)
}
return(f5)
}
a5<-q5(5)
q5 <- function(reptime){
d5 <- c()
f5 <- c()
for (i in 1:reptime){
e5 <- rnorm(1000, mean=0, sd=1)
x5 <- rnorm(1000, mean=0, sd=1)
y5 <- 1 + 2 * x5 + e5
fit5 <- lm(y5~x5)
f5 <- rbind(f5,fit5[1]$coefficients)
}
return(f5)
}
a5<-q5(5)
a5
a6<-q5(1000)
str(a6)
ggplot(a6,aes(x=x5)) +
geom_histogram(binwidth=0.003,fill="white",colour="black")+
ggtitle("Histogram of beta1")+
theme_bw()
ggplot(a6,aes(x=a6[,2])) +
geom_histogram(binwidth=0.003,fill="white",colour="black")+
ggtitle("Histogram of beta1")+
theme_bw()
x6<-a6[,2]
x6
x6<-data.frame(a6[,2])
ggplot(a6,aes(x=x6)) +
geom_histogram(binwidth=0.003,fill="white",colour="black")+
ggtitle("Histogram of beta1")+
theme_bw()
View(`x6`)
colnames(x6)<-"x6"
ggplot(x6,aes(x=x6)) +
geom_histogram(binwidth=0.003,fill="white",colour="black")+
ggtitle("Histogram of beta1")+
theme_bw()
