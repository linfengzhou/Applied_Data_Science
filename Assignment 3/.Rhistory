install.packages("scatterplot3d")
my.mat <- matrix(runif(25), nrow=5)
dimnames(my.mat) <- list(LETTERS[1:5], letters[11:15])
my.mat # the matrix we want to plot ...
s3d.dat <- data.frame(cols=as.vector(col(my.mat)),
rows=as.vector(row(my.mat)),
value=as.vector(my.mat))
scatterplot3d(s3d.dat, type="h", lwd=5, pch=" ",
x.ticklabs=colnames(my.mat), y.ticklabs=rownames(my.mat),
color=grey(25:1/40), main="scatterplot3d - 4")
library("scatterplot3d", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
my.mat <- matrix(runif(25), nrow=5)
dimnames(my.mat) <- list(LETTERS[1:5], letters[11:15])
my.mat # the matrix we want to plot ...
s3d.dat <- data.frame(cols=as.vector(col(my.mat)),
rows=as.vector(row(my.mat)),
value=as.vector(my.mat))
scatterplot3d(s3d.dat, type="h", lwd=5, pch=" ",
x.ticklabs=colnames(my.mat), y.ticklabs=rownames(my.mat),
color=grey(25:1/40), main="scatterplot3d - 4")
cc <- colors()
crgb <- t(col2rgb(cc))
par(xpd = TRUE)
rr <- scatterplot3d(crgb, color = cc, box = FALSE, angle = 24,
xlim = c(-50, 300), ylim = c(-50, 300), zlim = c(-50, 300))
cubedraw(rr)
## 6 b) The rainbow colors from rainbow(201)
rbc <- rainbow(201)
Rrb <- t(col2rgb(rbc))
rR <- scatterplot3d(Rrb, color = rbc, box = FALSE, angle = 24,
xlim = c(-50, 300), ylim = c(-50, 300), zlim = c(-50, 300))
cubedraw(rR)
rR$points3d(Rrb, col = rbc, pch = 16)
require('devtool')
install.packages("devtools")
library(quantmod)
DJIA_INDEX<-getSymbols("^DJI",from="2010-01-05", to='2015-03-01',src="yahoo") #US
View(DJI)
getSymbols("AAPL")
chartSeries(AAPL)
##Question 4
x4 <- rnorm(1000, mean=0, sd=1)
e4 <- rnorm(1000, mean=0, sd=1)
y4 <- 1 + 2 * x4 + e4
fit4 <- lm(y4~x4)
summary(fit4)
##Question 5
## generate norm
q5 <- function(reptime){
d5 <- c()
f5 <- c()
for (i in 1:reptime){
e5 <- rnorm(1000, mean=0, sd=1)
x5 <- rnorm(1000, mean=0, sd=1)
y5 <- 1 + 2 * x5 + e5
fit5 <- lm(y5~x5)
f5 <- rbind(f5,fit5[1]$coefficients)
}
return(f5)
}
a5<-q5(5)
# Question 6
a6<-q5(1000)
x6<-data.frame(a6[,2])
colnames(x6)<-"x6"
ggplot(x6,aes(x=x6)) +
geom_histogram(binwidth=0.003,fill="white",colour="black")+
ggtitle("Histogram of beta1")+
theme_bw()
# Question 7
library(ggplot2)
x7<-exp(x6)
View(`x7`)
colnames(x7)<-"x7"
ggplot(x6,aes(x=x7)) +
geom_histogram(binwidth=0.003,fill="white",colour="black")+
ggtitle("Histogram of beta1")+
theme_bw()
colnames(x7)<-"x7"
ggplot(x7,aes(x=x7)) +
geom_histogram(binwidth=0.003,fill="white",colour="black")+
ggtitle("Histogram of beta1")+
theme_bw()
ggplot(x6,aes(x=x6)) +
geom_histogram(binwidth=0.003,fill="white",colour="black")+
ggtitle("Histogram of beta1")+
theme_bw()
ggplot(x7,aes(x=x7)) +
geom_histogram(binwidth=0.5,fill="white",colour="black")+
ggtitle("Histogram of beta1")+
theme_bw()
ggplot(x7,aes(x=x7)) +
geom_histogram(binwidth=0.01,fill="white",colour="black")+
ggtitle("Histogram of beta1")+
theme_bw()
ggplot(x7,aes(x=x7)) +
geom_histogram(binwidth=0.02,fill="white",colour="black")+
ggtitle("Histogram of beta1")+
theme_bw()
ggplot(x7,aes(x=x7)) +
geom_histogram(binwidth=0.03,fill="white",colour="black")+
ggtitle("Histogram of beta1")+
theme_bw()
ggplot(x7,aes(x=x7)) +
geom_histogram(binwidth=0.04,fill="white",colour="black")+
ggtitle("Histogram of beta1")+
theme_bw()
ggplot(x7,aes(x=x7)) +
geom_histogram(binwidth=0.01,fill="white",colour="black")+
ggtitle("Histogram of beta1")+
theme_bw()
ggplot(x7,aes(x=x7)) +
geom_histogram(binwidth=0.007,fill="white",colour="black")+
ggtitle("Histogram of beta1")+
theme_bw()
ggplot(x7,aes(x=x7)) +
geom_histogram(binwidth=0.03,fill="white",colour="black")+
ggtitle("Histogram of beta1")+
theme_bw()
library(ggplot2)
ggmap(brooklyn) +
geom_point(data=brooklynzipcodes, aes(x=longitude, y=latitude))
library(ggmap)
install.packages("ggmap")
library("ggmap", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(mapproj)
install.packages("mapproj")
library("ggmap", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("mapproj", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
brooklyn <- get_map(location = "brooklyn", zoom = 11)
ggmap(brooklyn)
devtools::install_github("rstudio/leaflet")
install.packages("shiny")
library("shiny", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
m  # Print the map
library(foreign)
setwd("~luke/Dropbox/Applied_Data_Science/Assignment 3")
data <- read.dta("SI Sales.dta")
? read.dta
data <- read.dta("SI Old Sales.dta")
data <- read.dta("SI Sales Old.dta")
View(data)
? corr
?? corr
cor(data)
str(data)
cor(data)
fit1<-lm(price~unit_size)
fit1<-lm(price~unit_size,data)
summary(fit1)
fit2<-lm(price ~ unit_size + land_size,data)
summary(fit2)
fit3<-lm(price ~ unit_size + land_size + age,data)
summary(fit3)
fit4<-lm(price ~ unit_size + land_size + age + todt,data)
summary(fit4)
data$priceper1000= data$price/1000
head(data)
fit5<-lm(priceper1000 ~ unit_size + land_size + age + todt,data)
summary(fit5)
?? log regression
?? logregression
fit5<-lm(log(priceper1000)~log(unit_size),data)
summary(fit5)
fit5<-lm(priceper1000 ~ unit_size + land_size + age + todt,data)
fit6<-lm(log(priceper1000)~log(unit_size+land_size + age + todt),data)
summary(fit5)
summary(fit5)
summary(fit6)
fit6<-lm(log(priceper1000)~log(unit_size)+
log(land_size) + log(age) + log(todt),data)
data1<-log(data)
View(data1)
fit6<-lm(priceper1000 ~ unit_size + land_size + age + todt,data1)
fit6<-lm(log(priceper1000)~log(unit_size)+
log(land_size) + log(age) + todt,data)
View(data)
fit6<-lm(log(priceper1000)~log(unit_size)+todt,data)
fit6<-lm(log(priceper1000)~log(unit_size)+log(age)+todt,data)
fit6<-lm(log(priceper1000)~log(unit_size)+log(land_size)+todt,data)
View(data)
fit6<-lm(log(priceper1000)~log(unit_size)+log(land_size)+log(age+1)+todt,data)
summary(fit6)
data$year <- data$sales_year-2002
View(data)
head(data)
fit7<-lm(price ~ unit_size + land_size + age + todt + year,data)
summary(fit7)
summary(fit5)
confint(fit7)
confint(fit7,level=0.95)
data$unit_sizesf <- data$unit_size * 10.7639
data$land_sizesf <- data$land_size * 10.7639
fit8<-lm(price~unit_sizesf + land_sizesf + age + todt + year,data)
summary(fit8)
summary(fit7)
set.seed(1335)
x1 <- rnorm(10000, mean=0, sd=1)
x2 <- rnorm(10000, mean=0, sd=1)
e1 <- rnorm(10000, mean=0, sd=1)
y1 <- 1 + x1 + x2 + e1
cor(x1,x2)
fit<-lm(y1~x1)
fit9<-lm(y1~x1)
summary(fit)
fit9<-lm(y1~x1+x2)
summary(fit)
summary(fit9)
z1<-rnorm(10000, mean=0, sd=1)
q1<-rnorm(10000, mean=0, sd=1)
w1<-rnorm(10000, mean=0, sd=1)
x2_1<- z1+q1
x2_2<- -z1+w1
y2 = 1 + x2_1 + x2_2 +e1
cor(x1,x2)
fit10<-lm(y2~x2_1)
summary(fit10)
x2_1<- z1+q1
x2_2<- -z1+w1
y2 = 1 + x2_1 + x2_2 +e1
cor(x1,x2)
fit10<-lm(y2~x2_1+x2_2)
summary(fit10)
